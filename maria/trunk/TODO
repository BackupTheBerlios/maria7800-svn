- At some point I think we could start worrying about SDL.
  Probably it will be Tao, seems to be the most straightforward.
  It's more or less an 1:1 mapping of SDL's C API, which is exactly
  what I want.
  - As long as there's no real Tao installer / debian package
    we can aswell go and put the Tao source into our own
    autoconf/automake build process...
- Possibly we can work on the Cart classes.
  - I think I'll port the remaining carts and then
    worry about refactoring them.
- Build process:
  - At some point we should perhaps keep referenced assemblies
    as dependencies of the assembly that should be built.
  - Rundir has the MONO_PATH hardcoded, which is not terribly
    convenient. It should construct it itself from the src tree.
- Learn how to tag stuff, and tag the ORIGINAL emu7800 source code
  in the repository with 0.71 or somesuch.
- Raise warning level when compiling ?
- At some point search for \n sequences in source code and
  replace them by Environment.NewLine. Or so. Oh well.
---
Stuff to clean up:
- The whole Cart base/concrete class business looks a bit odd to me
- Duplicated code (offset calculation) in MD5.cs and GameSettings.cs
- Does GameSettings really need that many getters/setters ?
  (Nah. Probably it could happily be an immutable)
- Odd that AddressSpace owns a Machine reference, because it never uses it...
