- It might make sense to introduce an IAddressable interface that is
  both implemented by IDevice/AddressSpace. Well...technically AddressSpace
  itself should be an IDevice, but who cares, let's do it like that
  for the moment. It's probably simpler. The IAddressable interface
  simply defines a setter/getter. Or so. Oh well. Don't care too much,
  really.
- Make/test disassebler. We have enough code to do so now, the
  most important class is the AddressSpace class. The disassembler
  needs the CPU, but we could provide a bogus implementation of that.
  - Ok, GetRegisters() is in place, but I want to refactor it, and
    for that I need a test.
- Build process:
  - At some point we should perhaps keep referenced assemblies
    as dependencies of the assembly that should be built.
  - Rundir has the MONO_PATH hardcoded, which is not terribly
    convenient. It should construct it itself from the src tree.
- Learn how to tag stuff, and tag the ORIGINAL emu7800 source code
  in the repository with 0.71 or somesuch.
- Raise warning level when compiling ?
---
Stuff to clean up:
- Duplicated code (offset calculation) in MD5.cs and GameSettings.cs
- Does GameSettings really need that many getters/setters ?
  (Nah. Probably it could happily be an immutable)
- Odd that AddressSpace owns a Machine reference, because it never uses it...
